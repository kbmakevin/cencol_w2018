from tom's yt videos:

downloaded book at https://smtebooks.com/book/2426/mean-web-development-2nd-edition-pdf

code samples from book
https://github.com/amoshaviv/mean-web-development

tom recommended book
https://smtebooks.com/book/4995/web-application-development-mean-pdf

2nd book code samples
https://github.com/PacktPublishing/Developing-Microservices-With-Nodejs

web technologies are the most challenging to work with
    e.g. every 3 months there is something changing
        breaks ur code; sth that used to work no longer works. need to rework alot of
        the code

sth like java or c# easier since those are fairly stable.

js courses at cencol
1.comp125
2.comp397 web game programming
3.comp392 advanced graphics
4.comp308 emerging technologies
all tie together

doing es6 now, ECMASCRIPT 2015
https://es6-features.org

lots of new features, need to see if we can use them (which browser + version compatible)
http://caniuse.com
    penetration % tells us how many % of browsers we can use the feature with

e.g. classes are a new feature
before we simply made objects and prototypes
with es6, classes are available

let
---
hoisting is the issue with var keyword
    if var is declared lower in the code, it will get "hoisted' to the top
    this is bad because we expect declaration to happen down there where we wrote the code, but it actually happens up at the top
        this can cause weird glitches, it is available throughout the scope, we expect it declared somewhere but it is actually declared somehwere else

let keyword fixes this; doesnt let hoisting happening; wont get weird glitches

let, const and class penetration cross browser increased alot

previously only had like ~20% penetration, had to use things to convert from es6 to es5 
    eg. babylon js or typescript

microsoft developed typescript, google hoped on board
    ts close to all es6 features, and even some es7 features (which hasnt come out yet)

typescript gives us a lot of intellisense for things like nodejs which we didnt have before

git vs github
---
github is repo hosting website
git is the tool u use to upload stuff 

git is version ctrl sys u install on ur system
    allows u to
        version ctrl
        backup
        collaboration

github is a cloud service
    software as a service
    online repo where u can connect ur local git repo and upload to github so that u can share w every1
    shareable platform
    version ctrl
    backup
    issue tracking
    project management
    branch management

git is local

a commit:
    snapshot of the current state of your files

git push -u origin master
    -u is unconditional

can install git via:
1. desktop-github.com, or 
2. git-scm.com

as a mac user, install npm with homebrew, not through nodejs.com

node is really js on backend

mongodb is a no sql db that uses javascript

NoSQL database (non relational)
---
database provides mechanism for storage and retrieveal of data which is modeled in means other than tabular relations used  in relational databases

before installing mongodb, need to do setup
mkdir c:/data/db
    this is the default folder required by mongodb to access

sign up for mlab and heroku

need to have one cmd open to run server using 
mongod command

then open 2nd cmd and use mongo command to connect to the local db server

by eod, should have installed git, nodejs, npm, mongodb
signedup for heroku and mlab

Normally, when we access websites:
client sends request to server
server looks up ip routing table
server sends response with html page to client

for nodejs, we have to do all of this manually

nodejs is event driven, single thread

node app.js
---
if we make a change to the js files, need to reload the server in order to see changes
    it was loaded with the code at the time server started

install nodemon
    detects changes to files in the project, auto reloads the server

npm
---
contains packages, public and private
e.g. make a very good contact page, company can pay and make it private package on npm
    dont need to recreate contact page everytime, can just download it and pop it into the new project

OTHER INSTALLATIONS
------------------------------------------------------------------------------------------------------
lite-server
---
npm install lite-server -g

express generator
---
scaffolds out a whole application for us
npm install express-generator -game

bower.io
---
npm install bower -g

bower is package manager for the web 
    gets stuff like jquery, angular, front end frameworks

npm is for node packages
    adds functionality to nodejs

to see what is installed:
    npm ls -g --depth=0

gulpjs
---
npm install gulp-cli -g

gulp is automation for your web project
    e.g. minification css/js files for improved performance

cache windows credentials for github so wont be prompted everytime
or
git config --global username and password

